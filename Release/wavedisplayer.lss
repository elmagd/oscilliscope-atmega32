
wavedisplayer.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000404  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000002  00800060  00000404  00000498  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000211  00800062  00800062  0000049a  2**0
                  ALLOC
  3 .comment      00000011  00000000  00000000  0000049a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000004ac  2**2
                  CONTENTS, READONLY
  5 .debug_info   0000052e  00000000  00000000  000004e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000004e7  00000000  00000000  00000a16  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000001d  00000000  00000000  00000efd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    000001af  00000000  00000000  00000f1a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 81 00 	jmp	0x102	; 0x102 <__vector_8>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 46 01 	jmp	0x28c	; 0x28c <__vector_11>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 7f 01 	jmp	0x2fe	; 0x2fe <__vector_13>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e4 e0       	ldi	r30, 0x04	; 4
  68:	f4 e0       	ldi	r31, 0x04	; 4
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a2 36       	cpi	r26, 0x62	; 98
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	22 e0       	ldi	r18, 0x02	; 2
  78:	a2 e6       	ldi	r26, 0x62	; 98
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a3 37       	cpi	r26, 0x73	; 115
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 00 02 	jmp	0x400	; 0x400 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:
  92:	0e 94 a9 00 	call	0x152	; 0x152 <OSCI_Init>
  96:	0e 94 b2 00 	call	0x164	; 0x164 <OSCI_MainFunction>
  9a:	fd cf       	rjmp	.-6      	; 0x96 <main+0x4>

0000009c <uart_config>:
  9c:	cf 93       	push	r28
  9e:	df 93       	push	r29
  a0:	00 d0       	rcall	.+0      	; 0xa2 <uart_config+0x6>
  a2:	00 d0       	rcall	.+0      	; 0xa4 <uart_config+0x8>
  a4:	0f 92       	push	r0
  a6:	cd b7       	in	r28, 0x3d	; 61
  a8:	de b7       	in	r29, 0x3e	; 62
  aa:	83 e3       	ldi	r24, 0x33	; 51
  ac:	8a 83       	std	Y+2, r24	; 0x02
  ae:	19 82       	std	Y+1, r1	; 0x01
  b0:	1b 82       	std	Y+3, r1	; 0x03
  b2:	88 ed       	ldi	r24, 0xD8	; 216
  b4:	8c 83       	std	Y+4, r24	; 0x04
  b6:	86 e8       	ldi	r24, 0x86	; 134
  b8:	8d 83       	std	Y+5, r24	; 0x05
  ba:	ce 01       	movw	r24, r28
  bc:	01 96       	adiw	r24, 0x01	; 1
  be:	0e 94 b2 01 	call	0x364	; 0x364 <UART_Init>
  c2:	0f 90       	pop	r0
  c4:	0f 90       	pop	r0
  c6:	0f 90       	pop	r0
  c8:	0f 90       	pop	r0
  ca:	0f 90       	pop	r0
  cc:	df 91       	pop	r29
  ce:	cf 91       	pop	r28
  d0:	08 95       	ret

000000d2 <TIMER1_init>:
  d2:	8e b5       	in	r24, 0x2e	; 46
  d4:	81 60       	ori	r24, 0x01	; 1
  d6:	8e bd       	out	0x2e, r24	; 46
  d8:	1d bc       	out	0x2d, r1	; 45
  da:	1c bc       	out	0x2c, r1	; 44
  dc:	89 b7       	in	r24, 0x39	; 57
  de:	84 60       	ori	r24, 0x04	; 4
  e0:	89 bf       	out	0x39, r24	; 57
  e2:	78 94       	sei
  e4:	10 92 6f 02 	sts	0x026F, r1	; 0x80026f <tot_overflow>
  e8:	10 92 70 02 	sts	0x0270, r1	; 0x800270 <tot_overflow+0x1>
  ec:	10 92 71 02 	sts	0x0271, r1	; 0x800271 <tot_overflow+0x2>
  f0:	10 92 72 02 	sts	0x0272, r1	; 0x800272 <tot_overflow+0x3>
  f4:	08 95       	ret

000000f6 <ADC_init>:
  f6:	80 e6       	ldi	r24, 0x60	; 96
  f8:	87 b9       	out	0x07, r24	; 7
  fa:	86 b1       	in	r24, 0x06	; 6
  fc:	87 6c       	ori	r24, 0xC7	; 199
  fe:	86 b9       	out	0x06, r24	; 6
 100:	08 95       	ret

00000102 <__vector_8>:
 102:	1f 92       	push	r1
 104:	1f b6       	in	r1, 0x3f	; 63
 106:	1f 92       	push	r1
 108:	11 24       	eor	r1, r1
 10a:	8f 93       	push	r24
 10c:	9f 93       	push	r25
 10e:	af 93       	push	r26
 110:	bf 93       	push	r27
 112:	80 91 6f 02 	lds	r24, 0x026F	; 0x80026f <tot_overflow>
 116:	90 91 70 02 	lds	r25, 0x0270	; 0x800270 <tot_overflow+0x1>
 11a:	a0 91 71 02 	lds	r26, 0x0271	; 0x800271 <tot_overflow+0x2>
 11e:	b0 91 72 02 	lds	r27, 0x0272	; 0x800272 <tot_overflow+0x3>
 122:	01 96       	adiw	r24, 0x01	; 1
 124:	a1 1d       	adc	r26, r1
 126:	b1 1d       	adc	r27, r1
 128:	80 93 6f 02 	sts	0x026F, r24	; 0x80026f <tot_overflow>
 12c:	90 93 70 02 	sts	0x0270, r25	; 0x800270 <tot_overflow+0x1>
 130:	a0 93 71 02 	sts	0x0271, r26	; 0x800271 <tot_overflow+0x2>
 134:	b0 93 72 02 	sts	0x0272, r27	; 0x800272 <tot_overflow+0x3>
 138:	bf 91       	pop	r27
 13a:	af 91       	pop	r26
 13c:	9f 91       	pop	r25
 13e:	8f 91       	pop	r24
 140:	1f 90       	pop	r1
 142:	1f be       	out	0x3f, r1	; 63
 144:	1f 90       	pop	r1
 146:	18 95       	reti

00000148 <getADCSample>:
 148:	36 9a       	sbi	0x06, 6	; 6
 14a:	34 9b       	sbis	0x06, 4	; 6
 14c:	fe cf       	rjmp	.-4      	; 0x14a <getADCSample+0x2>
 14e:	85 b1       	in	r24, 0x05	; 5
 150:	08 95       	ret

00000152 <OSCI_Init>:
 152:	0e 94 4e 00 	call	0x9c	; 0x9c <uart_config>
 156:	0e 94 69 00 	call	0xd2	; 0xd2 <TIMER1_init>
 15a:	0e 94 7b 00 	call	0xf6	; 0xf6 <ADC_init>
 15e:	10 92 62 02 	sts	0x0262, r1	; 0x800262 <currentState>
 162:	08 95       	ret

00000164 <OSCI_MainFunction>:
 164:	ef 92       	push	r14
 166:	ff 92       	push	r15
 168:	0f 93       	push	r16
 16a:	1f 93       	push	r17
 16c:	cf 93       	push	r28
 16e:	df 93       	push	r29
 170:	80 91 62 02 	lds	r24, 0x0262	; 0x800262 <currentState>
 174:	81 30       	cpi	r24, 0x01	; 1
 176:	e9 f1       	breq	.+122    	; 0x1f2 <OSCI_MainFunction+0x8e>
 178:	88 23       	and	r24, r24
 17a:	51 f0       	breq	.+20     	; 0x190 <OSCI_MainFunction+0x2c>
 17c:	82 30       	cpi	r24, 0x02	; 2
 17e:	09 f4       	brne	.+2      	; 0x182 <OSCI_MainFunction+0x1e>
 180:	6b c0       	rjmp	.+214    	; 0x258 <OSCI_MainFunction+0xf4>
 182:	df 91       	pop	r29
 184:	cf 91       	pop	r28
 186:	1f 91       	pop	r17
 188:	0f 91       	pop	r16
 18a:	ff 90       	pop	r15
 18c:	ef 90       	pop	r14
 18e:	08 95       	ret
 190:	c0 91 6d 00 	lds	r28, 0x006D	; 0x80006d <samples_cnt>
 194:	0e 94 a4 00 	call	0x148	; 0x148 <getADCSample>
 198:	ec 2f       	mov	r30, r28
 19a:	f0 e0       	ldi	r31, 0x00	; 0
 19c:	e2 50       	subi	r30, 0x02	; 2
 19e:	fe 4f       	sbci	r31, 0xFE	; 254
 1a0:	80 83       	st	Z, r24
 1a2:	e0 91 6d 00 	lds	r30, 0x006D	; 0x80006d <samples_cnt>
 1a6:	80 91 6f 02 	lds	r24, 0x026F	; 0x80026f <tot_overflow>
 1aa:	90 91 70 02 	lds	r25, 0x0270	; 0x800270 <tot_overflow+0x1>
 1ae:	a0 91 71 02 	lds	r26, 0x0271	; 0x800271 <tot_overflow+0x2>
 1b2:	b0 91 72 02 	lds	r27, 0x0272	; 0x800272 <tot_overflow+0x3>
 1b6:	24 e0       	ldi	r18, 0x04	; 4
 1b8:	e2 9f       	mul	r30, r18
 1ba:	f0 01       	movw	r30, r0
 1bc:	11 24       	eor	r1, r1
 1be:	e2 59       	subi	r30, 0x92	; 146
 1c0:	ff 4f       	sbci	r31, 0xFF	; 255
 1c2:	80 83       	st	Z, r24
 1c4:	91 83       	std	Z+1, r25	; 0x01
 1c6:	a2 83       	std	Z+2, r26	; 0x02
 1c8:	b3 83       	std	Z+3, r27	; 0x03
 1ca:	80 91 6d 00 	lds	r24, 0x006D	; 0x80006d <samples_cnt>
 1ce:	8f 5f       	subi	r24, 0xFF	; 255
 1d0:	80 93 6d 00 	sts	0x006D, r24	; 0x80006d <samples_cnt>
 1d4:	8f e1       	ldi	r24, 0x1F	; 31
 1d6:	9e e4       	ldi	r25, 0x4E	; 78
 1d8:	01 97       	sbiw	r24, 0x01	; 1
 1da:	f1 f7       	brne	.-4      	; 0x1d8 <OSCI_MainFunction+0x74>
 1dc:	00 c0       	rjmp	.+0      	; 0x1de <OSCI_MainFunction+0x7a>
 1de:	00 00       	nop
 1e0:	90 91 6d 00 	lds	r25, 0x006D	; 0x80006d <samples_cnt>
 1e4:	81 e0       	ldi	r24, 0x01	; 1
 1e6:	94 36       	cpi	r25, 0x64	; 100
 1e8:	08 f4       	brcc	.+2      	; 0x1ec <OSCI_MainFunction+0x88>
 1ea:	80 e0       	ldi	r24, 0x00	; 0
 1ec:	80 93 62 02 	sts	0x0262, r24	; 0x800262 <currentState>
 1f0:	c8 cf       	rjmp	.-112    	; 0x182 <OSCI_MainFunction+0x1e>
 1f2:	ce ef       	ldi	r28, 0xFE	; 254
 1f4:	d1 e0       	ldi	r29, 0x01	; 1
 1f6:	0e e6       	ldi	r16, 0x6E	; 110
 1f8:	10 e0       	ldi	r17, 0x00	; 0
 1fa:	80 e4       	ldi	r24, 0x40	; 64
 1fc:	f8 2e       	mov	r15, r24
 1fe:	9b e3       	ldi	r25, 0x3B	; 59
 200:	e9 2e       	mov	r14, r25
 202:	f0 92 62 00 	sts	0x0062, r15	; 0x800062 <__data_end>
 206:	89 91       	ld	r24, Y+
 208:	80 93 63 00 	sts	0x0063, r24	; 0x800063 <__data_end+0x1>
 20c:	f8 01       	movw	r30, r16
 20e:	61 91       	ld	r22, Z+
 210:	71 91       	ld	r23, Z+
 212:	81 91       	ld	r24, Z+
 214:	91 91       	ld	r25, Z+
 216:	8f 01       	movw	r16, r30
 218:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <__bswapsi2>
 21c:	60 93 64 00 	sts	0x0064, r22	; 0x800064 <__data_end+0x2>
 220:	70 93 65 00 	sts	0x0065, r23	; 0x800065 <__data_end+0x3>
 224:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <__data_end+0x4>
 228:	90 93 67 00 	sts	0x0067, r25	; 0x800067 <__data_end+0x5>
 22c:	e0 92 68 00 	sts	0x0068, r14	; 0x800068 <__data_end+0x6>
 230:	67 e0       	ldi	r22, 0x07	; 7
 232:	70 e0       	ldi	r23, 0x00	; 0
 234:	82 e6       	ldi	r24, 0x62	; 98
 236:	90 e0       	ldi	r25, 0x00	; 0
 238:	0e 94 be 01 	call	0x37c	; 0x37c <UART_SendPayload>
 23c:	0e 94 dd 01 	call	0x3ba	; 0x3ba <UART_IsTxComplete>
 240:	88 23       	and	r24, r24
 242:	e1 f3       	breq	.-8      	; 0x23c <OSCI_MainFunction+0xd8>
 244:	f2 e0       	ldi	r31, 0x02	; 2
 246:	c2 36       	cpi	r28, 0x62	; 98
 248:	df 07       	cpc	r29, r31
 24a:	d9 f6       	brne	.-74     	; 0x202 <OSCI_MainFunction+0x9e>
 24c:	61 e0       	ldi	r22, 0x01	; 1
 24e:	70 e0       	ldi	r23, 0x00	; 0
 250:	80 e6       	ldi	r24, 0x60	; 96
 252:	90 e0       	ldi	r25, 0x00	; 0
 254:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <UART_ReceivePayload>
 258:	0e 94 eb 01 	call	0x3d6	; 0x3d6 <UART_IsRxComplete>
 25c:	81 30       	cpi	r24, 0x01	; 1
 25e:	a1 f4       	brne	.+40     	; 0x288 <OSCI_MainFunction+0x124>
 260:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__data_start>
 264:	87 34       	cpi	r24, 0x47	; 71
 266:	81 f4       	brne	.+32     	; 0x288 <OSCI_MainFunction+0x124>
 268:	10 92 62 02 	sts	0x0262, r1	; 0x800262 <currentState>
 26c:	8e e4       	ldi	r24, 0x4E	; 78
 26e:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__data_start>
 272:	10 92 6f 02 	sts	0x026F, r1	; 0x80026f <tot_overflow>
 276:	10 92 70 02 	sts	0x0270, r1	; 0x800270 <tot_overflow+0x1>
 27a:	10 92 71 02 	sts	0x0271, r1	; 0x800271 <tot_overflow+0x2>
 27e:	10 92 72 02 	sts	0x0272, r1	; 0x800272 <tot_overflow+0x3>
 282:	10 92 6d 00 	sts	0x006D, r1	; 0x80006d <samples_cnt>
 286:	7d cf       	rjmp	.-262    	; 0x182 <OSCI_MainFunction+0x1e>
 288:	82 e0       	ldi	r24, 0x02	; 2
 28a:	b0 cf       	rjmp	.-160    	; 0x1ec <OSCI_MainFunction+0x88>

0000028c <__vector_11>:
 28c:	2f 93       	push	r18
 28e:	2f b7       	in	r18, 0x3f	; 63
 290:	2f 93       	push	r18
 292:	3f 93       	push	r19
 294:	4f 93       	push	r20
 296:	5f 93       	push	r21
 298:	8f 93       	push	r24
 29a:	9f 93       	push	r25
 29c:	ef 93       	push	r30
 29e:	ff 93       	push	r31
 2a0:	f8 94       	cli
 2a2:	8c b1       	in	r24, 0x0c	; 12
 2a4:	40 91 63 02 	lds	r20, 0x0263	; 0x800263 <rx_cnt>
 2a8:	50 91 64 02 	lds	r21, 0x0264	; 0x800264 <rx_cnt+0x1>
 2ac:	20 91 65 02 	lds	r18, 0x0265	; 0x800265 <rx_len>
 2b0:	30 91 66 02 	lds	r19, 0x0266	; 0x800266 <rx_len+0x1>
 2b4:	42 17       	cp	r20, r18
 2b6:	53 07       	cpc	r21, r19
 2b8:	b0 f4       	brcc	.+44     	; 0x2e6 <__vector_11+0x5a>
 2ba:	80 32       	cpi	r24, 0x20	; 32
 2bc:	a1 f0       	breq	.+40     	; 0x2e6 <__vector_11+0x5a>
 2be:	20 91 63 02 	lds	r18, 0x0263	; 0x800263 <rx_cnt>
 2c2:	30 91 64 02 	lds	r19, 0x0264	; 0x800264 <rx_cnt+0x1>
 2c6:	e0 91 67 02 	lds	r30, 0x0267	; 0x800267 <rx_buffer>
 2ca:	f0 91 68 02 	lds	r31, 0x0268	; 0x800268 <rx_buffer+0x1>
 2ce:	e2 0f       	add	r30, r18
 2d0:	f3 1f       	adc	r31, r19
 2d2:	80 83       	st	Z, r24
 2d4:	80 91 63 02 	lds	r24, 0x0263	; 0x800263 <rx_cnt>
 2d8:	90 91 64 02 	lds	r25, 0x0264	; 0x800264 <rx_cnt+0x1>
 2dc:	01 96       	adiw	r24, 0x01	; 1
 2de:	90 93 64 02 	sts	0x0264, r25	; 0x800264 <rx_cnt+0x1>
 2e2:	80 93 63 02 	sts	0x0263, r24	; 0x800263 <rx_cnt>
 2e6:	78 94       	sei
 2e8:	ff 91       	pop	r31
 2ea:	ef 91       	pop	r30
 2ec:	9f 91       	pop	r25
 2ee:	8f 91       	pop	r24
 2f0:	5f 91       	pop	r21
 2f2:	4f 91       	pop	r20
 2f4:	3f 91       	pop	r19
 2f6:	2f 91       	pop	r18
 2f8:	2f bf       	out	0x3f, r18	; 63
 2fa:	2f 91       	pop	r18
 2fc:	18 95       	reti

000002fe <__vector_13>:
 2fe:	2f 93       	push	r18
 300:	2f b7       	in	r18, 0x3f	; 63
 302:	2f 93       	push	r18
 304:	3f 93       	push	r19
 306:	8f 93       	push	r24
 308:	9f 93       	push	r25
 30a:	ef 93       	push	r30
 30c:	ff 93       	push	r31
 30e:	f8 94       	cli
 310:	80 91 69 02 	lds	r24, 0x0269	; 0x800269 <tx_cnt>
 314:	90 91 6a 02 	lds	r25, 0x026A	; 0x80026a <tx_cnt+0x1>
 318:	01 96       	adiw	r24, 0x01	; 1
 31a:	90 93 6a 02 	sts	0x026A, r25	; 0x80026a <tx_cnt+0x1>
 31e:	80 93 69 02 	sts	0x0269, r24	; 0x800269 <tx_cnt>
 322:	20 91 69 02 	lds	r18, 0x0269	; 0x800269 <tx_cnt>
 326:	30 91 6a 02 	lds	r19, 0x026A	; 0x80026a <tx_cnt+0x1>
 32a:	80 91 6b 02 	lds	r24, 0x026B	; 0x80026b <tx_len>
 32e:	90 91 6c 02 	lds	r25, 0x026C	; 0x80026c <tx_len+0x1>
 332:	28 17       	cp	r18, r24
 334:	39 07       	cpc	r19, r25
 336:	60 f4       	brcc	.+24     	; 0x350 <__vector_13+0x52>
 338:	80 91 69 02 	lds	r24, 0x0269	; 0x800269 <tx_cnt>
 33c:	90 91 6a 02 	lds	r25, 0x026A	; 0x80026a <tx_cnt+0x1>
 340:	e0 91 6d 02 	lds	r30, 0x026D	; 0x80026d <tx_buffer>
 344:	f0 91 6e 02 	lds	r31, 0x026E	; 0x80026e <tx_buffer+0x1>
 348:	e8 0f       	add	r30, r24
 34a:	f9 1f       	adc	r31, r25
 34c:	80 81       	ld	r24, Z
 34e:	8c b9       	out	0x0c, r24	; 12
 350:	78 94       	sei
 352:	ff 91       	pop	r31
 354:	ef 91       	pop	r30
 356:	9f 91       	pop	r25
 358:	8f 91       	pop	r24
 35a:	3f 91       	pop	r19
 35c:	2f 91       	pop	r18
 35e:	2f bf       	out	0x3f, r18	; 63
 360:	2f 91       	pop	r18
 362:	18 95       	reti

00000364 <UART_Init>:
 364:	fc 01       	movw	r30, r24
 366:	80 81       	ld	r24, Z
 368:	80 bd       	out	0x20, r24	; 32
 36a:	81 81       	ldd	r24, Z+1	; 0x01
 36c:	89 b9       	out	0x09, r24	; 9
 36e:	82 81       	ldd	r24, Z+2	; 0x02
 370:	8b b9       	out	0x0b, r24	; 11
 372:	83 81       	ldd	r24, Z+3	; 0x03
 374:	8a b9       	out	0x0a, r24	; 10
 376:	84 81       	ldd	r24, Z+4	; 0x04
 378:	80 bd       	out	0x20, r24	; 32
 37a:	08 95       	ret

0000037c <UART_SendPayload>:
 37c:	90 93 6e 02 	sts	0x026E, r25	; 0x80026e <tx_buffer+0x1>
 380:	80 93 6d 02 	sts	0x026D, r24	; 0x80026d <tx_buffer>
 384:	70 93 6c 02 	sts	0x026C, r23	; 0x80026c <tx_len+0x1>
 388:	60 93 6b 02 	sts	0x026B, r22	; 0x80026b <tx_len>
 38c:	10 92 6a 02 	sts	0x026A, r1	; 0x80026a <tx_cnt+0x1>
 390:	10 92 69 02 	sts	0x0269, r1	; 0x800269 <tx_cnt>
 394:	5d 9b       	sbis	0x0b, 5	; 11
 396:	fe cf       	rjmp	.-4      	; 0x394 <UART_SendPayload+0x18>
 398:	fc 01       	movw	r30, r24
 39a:	80 81       	ld	r24, Z
 39c:	8c b9       	out	0x0c, r24	; 12
 39e:	08 95       	ret

000003a0 <UART_ReceivePayload>:
 3a0:	90 93 68 02 	sts	0x0268, r25	; 0x800268 <rx_buffer+0x1>
 3a4:	80 93 67 02 	sts	0x0267, r24	; 0x800267 <rx_buffer>
 3a8:	70 93 66 02 	sts	0x0266, r23	; 0x800266 <rx_len+0x1>
 3ac:	60 93 65 02 	sts	0x0265, r22	; 0x800265 <rx_len>
 3b0:	10 92 64 02 	sts	0x0264, r1	; 0x800264 <rx_cnt+0x1>
 3b4:	10 92 63 02 	sts	0x0263, r1	; 0x800263 <rx_cnt>
 3b8:	08 95       	ret

000003ba <UART_IsTxComplete>:
 3ba:	40 91 69 02 	lds	r20, 0x0269	; 0x800269 <tx_cnt>
 3be:	50 91 6a 02 	lds	r21, 0x026A	; 0x80026a <tx_cnt+0x1>
 3c2:	20 91 6b 02 	lds	r18, 0x026B	; 0x80026b <tx_len>
 3c6:	30 91 6c 02 	lds	r19, 0x026C	; 0x80026c <tx_len+0x1>
 3ca:	81 e0       	ldi	r24, 0x01	; 1
 3cc:	42 17       	cp	r20, r18
 3ce:	53 07       	cpc	r21, r19
 3d0:	08 f4       	brcc	.+2      	; 0x3d4 <UART_IsTxComplete+0x1a>
 3d2:	80 e0       	ldi	r24, 0x00	; 0
 3d4:	08 95       	ret

000003d6 <UART_IsRxComplete>:
 3d6:	40 91 63 02 	lds	r20, 0x0263	; 0x800263 <rx_cnt>
 3da:	50 91 64 02 	lds	r21, 0x0264	; 0x800264 <rx_cnt+0x1>
 3de:	20 91 65 02 	lds	r18, 0x0265	; 0x800265 <rx_len>
 3e2:	30 91 66 02 	lds	r19, 0x0266	; 0x800266 <rx_len+0x1>
 3e6:	81 e0       	ldi	r24, 0x01	; 1
 3e8:	42 17       	cp	r20, r18
 3ea:	53 07       	cpc	r21, r19
 3ec:	08 f4       	brcc	.+2      	; 0x3f0 <UART_IsRxComplete+0x1a>
 3ee:	80 e0       	ldi	r24, 0x00	; 0
 3f0:	08 95       	ret

000003f2 <__bswapsi2>:
 3f2:	69 27       	eor	r22, r25
 3f4:	96 27       	eor	r25, r22
 3f6:	69 27       	eor	r22, r25
 3f8:	78 27       	eor	r23, r24
 3fa:	87 27       	eor	r24, r23
 3fc:	78 27       	eor	r23, r24
 3fe:	08 95       	ret

00000400 <_exit>:
 400:	f8 94       	cli

00000402 <__stop_program>:
 402:	ff cf       	rjmp	.-2      	; 0x402 <__stop_program>
